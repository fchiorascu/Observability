# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/

user root ;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 10240;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    client_max_body_size 500000000;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

#############################################
### Reverse proxy                         ###
#############################################

    upstream grafana_backend {
        server 192.168.10.1:3000;
    }
    upstream alertmanager_backend {
        server 192.168.10.2:9093;
    }
    upstream prometheus_backend {
        server 192.168.10.3:9090;
    }
    server {
        listen      80;
        server_name "";
        return      444;
    }
    server {
        listen 80 default_server;

          location / {
            if ($scheme = 'http') {
              rewrite ^ https://$http_host$request_uri? permanent;
            }
          }

        listen  443 ssl;
        server_name tool.example.com;

        include snippets/example.conf;
        include snippets/ssl-params.conf;

        ssl_client_certificate /etc/ssl/certs/example_root.cer;
        ssl_verify_client optional;
        ssl_verify_depth 3;

        client_max_body_size 500M;

              location /_auth2 {
                if ($remote_user ~* "^(fchiorascu|user1|user2)$") {
                  return 200;
                }
                if ($remote_user !~* "^(fchiorascu|user1|user2)$") {
                  return 403;
                }
            }
            location ~^/grafana {
                proxy_set_header Host $host;
                rewrite ^/grafana/(.*) /$1 break;
                proxy_pass https://grafana_backend;
            }
            location ^~/prometheus/ {
                auth_basic                    "[Prometheus] GUI";
                auth_basic_user_file /etc/nginx/.htpasswd;
                auth_request /_auth2;
                proxy_set_header Host $host;
                proxy_pass http://prometheus_backend/prometheus/;
            }
            location ^~/alertmanager/ {
                auth_basic                    "[Alertmanager] GUI";
                auth_basic_user_file /etc/nginx/.htpasswd;
                auth_request /_auth2;
                proxy_set_header Host $host;
                proxy_pass http://alertmanager_backend/alertmanager/;
            }
